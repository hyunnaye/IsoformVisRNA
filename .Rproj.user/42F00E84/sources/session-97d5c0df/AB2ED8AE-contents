#' Cleans the test metadata file downloaded from the ENCODE project https://www.encodeproject.org/report/?type=Experiment&status=released&internal_tags=RushAD&assay_title=total+RNA-seq&limit=200
#'
#'It will filter the metadata file to only include the subset of samples downloaded for testing purposes.
#'@import dplyr
#'
#'

experiment_report <- read_tsv('../experiment_report.tsv')

#the downloaded tsv file has spaces in the column names. Thus the spaces will be replaced with underscores.
names(experiment_report) <- str_replace_all(names(experiment_report), c(" " = "_"))

experiment_report <- experiment_report %>%
  mutate(Biosample_age = map(strsplit(.$Biosample_age, split = ' '), 1) %>% unlist()) %>%
  mutate(Biosample_summary = map(strsplit(.$Biosample_summary, split = ';'), 1) %>% unlist()) %>%
  mutate(Biosample_summary = case_when(grepl("dorsolateral", Biosample_summary) ~ "Control",
                                       grepl("with ", Biosample_summary) ~ str_replace(Biosample_summary, ".*with ", "")) %>% unlist()) %>%
  mutate(Biosample_summary = ifelse(grepl("Cognitive impairment, Alzheimer's disease", Biosample_summary), "Alzheimer's disease, Cognitive impairment", Biosample_summary) %>% unlist()) %>%
  select(c(`Accession`, `Files`, `Biosample_age`, `Biosample_summary`))

# Getting a list of all the transcript quantifications file names for testing. These files were downloaded from the ENCODE project where they were quantified at the transcription level using kallisto.
# https://www.encodeproject.org/report/?type=Experiment&status=released&internal_tags=RushAD&assay_title=total+RNA-seq&limit=200
quantsList <- list.files(path = "../transcript_quants", pattern = "\\.tsv$")
quantsList <- str_replace_all(quantsList, c(".tsv" = ""))

quantFileInfo <- data.frame(row.names = c('Accession', 'Biosample_age', 'Biosample_summary', 'Quantification_file'))

# Filtering experiment_report to only rows that are relevant for the samples we are using for testing.
for (file in quantsList) {
  matchingInfo <- experiment_report %>% filter(grepl(file, Files, fixed = TRUE)) %>%
    select(c(Accession, `Biosample_age`, `Biosample_summary`))
  matchingInfo$Quantification_file <- c(file)
  quantFileInfo <-rbind(quantFileInfo, matchingInfo)
}

Experiment_info <- quantFileInfo
write_tsv(quantFileInfo, file = 'data/cleaned_metadata.tsv')

#[END]


